syntax = "proto3";
package tendermint.p2p;

option go_package = "github.com/tendermint/tendermint/proto/tendermint/p2p";

import "gogoproto/gogo.proto";

message PexAddress {
  string id   = 1 [(gogoproto.customname) = "ID"];
  string ip   = 2 [(gogoproto.customname) = "IP"];
  uint32 port = 3;
}

message PexRequest {}

message PexResponse {
  repeated PexAddress addresses = 1 [(gogoproto.nullable) = false];
}

message PexNode {
  // Encoded endpoint including protocol, id and path.
  string   url  = 1 [(gogoproto.customname) = "URL"];
  // Unaltered NodeInfo obtained during handshake with the peer.
  NodeInfo info = 2;
}

message PexRequestInfo {
  // Optional network/chain id to restrict the query to only return nodes which
  // are part of that chain.
  string network = 1;
}

message PexResponseInfo {
  repeated PexNode nodes = 1 [gogoproto.nullable) = false];
}

message PexMessage {
  oneof sum {
    PexRequest      pex_request       = 1;
    PexResponse     pex_response      = 2;
    PexRequestInfo  pex_request_info  = 3;
    PexResponseInfo pex_response_info = 4;
  }
}
